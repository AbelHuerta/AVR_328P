
practica_1_adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  0000105c  000010f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000105c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ac  0080012a  0080012a  0000111a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000111a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001178  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d8c  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000845  00000000  00000000  00001fec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000778  00000000  00000000  00002831  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000190  00000000  00000000  00002fac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000515  00000000  00000000  0000313c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000574  00000000  00000000  00003651  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003bc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e5       	ldi	r30, 0x5C	; 92
     17e:	f0 e1       	ldi	r31, 0x10	; 16
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	aa 32       	cpi	r26, 0x2A	; 42
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	aa e2       	ldi	r26, 0x2A	; 42
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a6 3d       	cpi	r26, 0xD6	; 214
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <main>
     1a0:	0c 94 2c 08 	jmp	0x1058	; 0x1058 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <ADC_AVR_Init>:
void ADC_Avr_Disable(void){
//DESABILITA EL ADC
	ADCSRA &= ~(1<<ADEN);	
}

void ADC_Avr_SelectANX(uint8_t ANX){
     1a8:	ec e7       	ldi	r30, 0x7C	; 124
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	80 64       	ori	r24, 0x40	; 64
     1b0:	80 83       	st	Z, r24
     1b2:	80 81       	ld	r24, Z
     1b4:	8f 77       	andi	r24, 0x7F	; 127
     1b6:	80 83       	st	Z, r24
     1b8:	80 81       	ld	r24, Z
     1ba:	8f 7d       	andi	r24, 0xDF	; 223
     1bc:	80 83       	st	Z, r24
     1be:	ea e7       	ldi	r30, 0x7A	; 122
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	80 81       	ld	r24, Z
     1c4:	87 60       	ori	r24, 0x07	; 7
     1c6:	80 83       	st	Z, r24
     1c8:	8f ef       	ldi	r24, 0xFF	; 255
     1ca:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
     1ce:	08 95       	ret

000001d0 <ADC_Avr_Enable>:
     1d0:	ea e7       	ldi	r30, 0x7A	; 122
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	80 81       	ld	r24, Z
     1d6:	80 68       	ori	r24, 0x80	; 128
     1d8:	80 83       	st	Z, r24
     1da:	08 95       	ret

000001dc <ADC_Avr_Disable>:
     1dc:	ea e7       	ldi	r30, 0x7A	; 122
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	80 81       	ld	r24, Z
     1e2:	8f 77       	andi	r24, 0x7F	; 127
     1e4:	80 83       	st	Z, r24
     1e6:	08 95       	ret

000001e8 <AnalogRead>:
	
}


uint16_t AnalogRead(Channel ANx){
     1e8:	cf 93       	push	r28
     1ea:	c8 2f       	mov	r28, r24
//HABILITA EL ADC
	ADC_Avr_Enable();
     1ec:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <ADC_Avr_Enable>
	
//SELECCION DEL CANAL	
	ADMUX = ((ADMUX & 0xF0 )| (ANx & 0x0F)); //MANTIENE LOS BITS 7-4
     1f0:	ec e7       	ldi	r30, 0x7C	; 124
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	80 7f       	andi	r24, 0xF0	; 240
     1f8:	cf 70       	andi	r28, 0x0F	; 15
     1fa:	c8 2b       	or	r28, r24
     1fc:	c0 83       	st	Z, r28

//INICIA CONVERSION
	ADCSRA |= (1<<ADSC);
     1fe:	ea e7       	ldi	r30, 0x7A	; 122
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	80 81       	ld	r24, Z
     204:	80 64       	ori	r24, 0x40	; 64
     206:	80 83       	st	Z, r24
	
//ESPERAR QUE LA CONVERSION TERMINE
	while((ADCSRA & (1<<ADSC)) == true);
     208:	80 81       	ld	r24, Z

//DESABILITAMOS EL ADC
	ADC_Avr_Disable();
     20a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <ADC_Avr_Disable>
	
return ADC;
     20e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     212:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <LCD_AVR_Data_Bus>:
	_delay_ms(2);
	E_OFF;
}
void LCD_AVR_Data_Bus(uint8_t a){
	// 0001
	if (a & 0x01){D4_ON;}
     21a:	80 ff       	sbrs	r24, 0
     21c:	04 c0       	rjmp	.+8      	; 0x226 <LCD_AVR_Data_Bus+0xc>
     21e:	95 b1       	in	r25, 0x05	; 5
     220:	94 60       	ori	r25, 0x04	; 4
     222:	95 b9       	out	0x05, r25	; 5
     224:	03 c0       	rjmp	.+6      	; 0x22c <LCD_AVR_Data_Bus+0x12>
	else{D4_OFF;}
     226:	95 b1       	in	r25, 0x05	; 5
     228:	9b 7f       	andi	r25, 0xFB	; 251
     22a:	95 b9       	out	0x05, r25	; 5
	// 0010
	if (a & 0x02){D5_ON;}
     22c:	81 ff       	sbrs	r24, 1
     22e:	04 c0       	rjmp	.+8      	; 0x238 <LCD_AVR_Data_Bus+0x1e>
     230:	95 b1       	in	r25, 0x05	; 5
     232:	98 60       	ori	r25, 0x08	; 8
     234:	95 b9       	out	0x05, r25	; 5
     236:	03 c0       	rjmp	.+6      	; 0x23e <LCD_AVR_Data_Bus+0x24>
	else{D5_OFF;}
     238:	95 b1       	in	r25, 0x05	; 5
     23a:	97 7f       	andi	r25, 0xF7	; 247
     23c:	95 b9       	out	0x05, r25	; 5
	// 0100
	if (a & 0x04){D6_ON;}
     23e:	82 ff       	sbrs	r24, 2
     240:	04 c0       	rjmp	.+8      	; 0x24a <LCD_AVR_Data_Bus+0x30>
     242:	95 b1       	in	r25, 0x05	; 5
     244:	90 61       	ori	r25, 0x10	; 16
     246:	95 b9       	out	0x05, r25	; 5
     248:	03 c0       	rjmp	.+6      	; 0x250 <LCD_AVR_Data_Bus+0x36>
	else{D6_OFF;}
     24a:	95 b1       	in	r25, 0x05	; 5
     24c:	9f 7e       	andi	r25, 0xEF	; 239
     24e:	95 b9       	out	0x05, r25	; 5
	// 1000
	if (a & 0x08){D7_ON;}
     250:	83 ff       	sbrs	r24, 3
     252:	04 c0       	rjmp	.+8      	; 0x25c <LCD_AVR_Data_Bus+0x42>
     254:	85 b1       	in	r24, 0x05	; 5
     256:	80 62       	ori	r24, 0x20	; 32
     258:	85 b9       	out	0x05, r24	; 5
     25a:	08 95       	ret
	else{D7_OFF;}
     25c:	85 b1       	in	r24, 0x05	; 5
     25e:	8f 7d       	andi	r24, 0xDF	; 223
     260:	85 b9       	out	0x05, r24	; 5
     262:	08 95       	ret

00000264 <LCD_AVR_Cmd>:
#include "LCD_avr.h"
#define  F_CPU 8000000UL
#include <util/delay.h>

void LCD_AVR_Cmd(uint8_t a){
	E_OFF;
     264:	95 b1       	in	r25, 0x05	; 5
     266:	9e 7f       	andi	r25, 0xFE	; 254
     268:	95 b9       	out	0x05, r25	; 5
	E_ON;
     26a:	95 b1       	in	r25, 0x05	; 5
     26c:	91 60       	ori	r25, 0x01	; 1
     26e:	95 b9       	out	0x05, r25	; 5
	LCD_AVR_Data_Bus(a)	;
     270:	0e 94 0d 01 	call	0x21a	; 0x21a <LCD_AVR_Data_Bus>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     274:	8f e9       	ldi	r24, 0x9F	; 159
     276:	9f e0       	ldi	r25, 0x0F	; 15
     278:	01 97       	sbiw	r24, 0x01	; 1
     27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_AVR_Cmd+0x14>
     27c:	00 c0       	rjmp	.+0      	; 0x27e <LCD_AVR_Cmd+0x1a>
     27e:	00 00       	nop
	_delay_ms(2);
	E_OFF;
     280:	85 b1       	in	r24, 0x05	; 5
     282:	8e 7f       	andi	r24, 0xFE	; 254
     284:	85 b9       	out	0x05, r24	; 5
     286:	08 95       	ret

00000288 <LCD_AVR_Init>:
	if (a & 0x08){D7_ON;}
	else{D7_OFF;}
}
void LCD_AVR_Init(void){
	
	DDRB |= (1<<0) |(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5);
     288:	84 b1       	in	r24, 0x04	; 4
     28a:	8f 63       	ori	r24, 0x3F	; 63
     28c:	84 b9       	out	0x04, r24	; 4
	
	LCD_AVR_Cmd(0X03);
     28e:	83 e0       	ldi	r24, 0x03	; 3
     290:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
     294:	83 e0       	ldi	r24, 0x03	; 3
     296:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
     2a0:	82 e0       	ldi	r24, 0x02	; 2
     2a2:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
     2a6:	82 e0       	ldi	r24, 0x02	; 2
     2a8:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
     2ac:	88 e0       	ldi	r24, 0x08	; 8
     2ae:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
     2b8:	88 e0       	ldi	r24, 0x08	; 8
     2ba:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
     2be:	80 e0       	ldi	r24, 0x00	; 0
     2c0:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X01);
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X0C);
     2d0:	8c e0       	ldi	r24, 0x0C	; 12
     2d2:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
     2d6:	08 95       	ret

000002d8 <LCD_AVR_Set_Cursor>:
	
}
void LCD_AVR_Set_Cursor(uint8_t x,Ubicacion y){
     2d8:	cf 93       	push	r28
uint8_t m,n;

RS_OFF;
     2da:	95 b1       	in	r25, 0x05	; 5
     2dc:	9d 7f       	andi	r25, 0xFD	; 253
     2de:	95 b9       	out	0x05, r25	; 5
switch (y)
     2e0:	61 30       	cpi	r22, 0x01	; 1
     2e2:	c9 f0       	breq	.+50     	; 0x316 <LCD_AVR_Set_Cursor+0x3e>
     2e4:	28 f0       	brcs	.+10     	; 0x2f0 <LCD_AVR_Set_Cursor+0x18>
     2e6:	62 30       	cpi	r22, 0x02	; 2
     2e8:	49 f1       	breq	.+82     	; 0x33c <LCD_AVR_Set_Cursor+0x64>
     2ea:	63 30       	cpi	r22, 0x03	; 3
     2ec:	d1 f1       	breq	.+116    	; 0x362 <LCD_AVR_Set_Cursor+0x8a>
     2ee:	4b c0       	rjmp	.+150    	; 0x386 <LCD_AVR_Set_Cursor+0xae>
{
	case Fila1:
			m=0x80+x;
     2f0:	c0 e8       	ldi	r28, 0x80	; 128
     2f2:	c8 0f       	add	r28, r24
			n=(0x80+x)>>4;
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	80 58       	subi	r24, 0x80	; 128
     2f8:	9f 4f       	sbci	r25, 0xFF	; 255
     2fa:	95 95       	asr	r25
     2fc:	87 95       	ror	r24
     2fe:	95 95       	asr	r25
     300:	87 95       	ror	r24
     302:	95 95       	asr	r25
     304:	87 95       	ror	r24
     306:	95 95       	asr	r25
     308:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
     30a:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
     30e:	8c 2f       	mov	r24, r28
     310:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	break;
     314:	38 c0       	rjmp	.+112    	; 0x386 <LCD_AVR_Set_Cursor+0xae>
	case Fila2:
			m=0xC0+x;
     316:	c0 ec       	ldi	r28, 0xC0	; 192
     318:	c8 0f       	add	r28, r24
			n=(0XC0+x)>>4;
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	80 54       	subi	r24, 0x40	; 64
     31e:	9f 4f       	sbci	r25, 0xFF	; 255
     320:	95 95       	asr	r25
     322:	87 95       	ror	r24
     324:	95 95       	asr	r25
     326:	87 95       	ror	r24
     328:	95 95       	asr	r25
     32a:	87 95       	ror	r24
     32c:	95 95       	asr	r25
     32e:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
     330:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
     334:	8c 2f       	mov	r24, r28
     336:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	break;
     33a:	25 c0       	rjmp	.+74     	; 0x386 <LCD_AVR_Set_Cursor+0xae>
	case Fila3:
			m=0x94+x;
     33c:	c4 e9       	ldi	r28, 0x94	; 148
     33e:	c8 0f       	add	r28, r24
			n=(0x94+x)>>4;
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	8c 56       	subi	r24, 0x6C	; 108
     344:	9f 4f       	sbci	r25, 0xFF	; 255
     346:	95 95       	asr	r25
     348:	87 95       	ror	r24
     34a:	95 95       	asr	r25
     34c:	87 95       	ror	r24
     34e:	95 95       	asr	r25
     350:	87 95       	ror	r24
     352:	95 95       	asr	r25
     354:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
     356:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
     35a:	8c 2f       	mov	r24, r28
     35c:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	break;
     360:	12 c0       	rjmp	.+36     	; 0x386 <LCD_AVR_Set_Cursor+0xae>
	case Fila4:
			m=0xD4+x;
     362:	c4 ed       	ldi	r28, 0xD4	; 212
     364:	c8 0f       	add	r28, r24
			n=(0xD4+x)>>4;
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	8c 52       	subi	r24, 0x2C	; 44
     36a:	9f 4f       	sbci	r25, 0xFF	; 255
     36c:	95 95       	asr	r25
     36e:	87 95       	ror	r24
     370:	95 95       	asr	r25
     372:	87 95       	ror	r24
     374:	95 95       	asr	r25
     376:	87 95       	ror	r24
     378:	95 95       	asr	r25
     37a:	87 95       	ror	r24
			LCD_AVR_Cmd(n);
     37c:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
			LCD_AVR_Cmd(m);
     380:	8c 2f       	mov	r24, r28
     382:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
	break;
}
	
}
     386:	cf 91       	pop	r28
     388:	08 95       	ret

0000038a <LCD_AVR_Print_Char>:
void LCD_AVR_Print_Char(char c){
     38a:	cf 93       	push	r28
     38c:	c8 2f       	mov	r28, r24
		uint8_t m,n;
		m=c>>4;
		n=c;
		RS_ON;
     38e:	85 b1       	in	r24, 0x05	; 5
     390:	82 60       	ori	r24, 0x02	; 2
     392:	85 b9       	out	0x05, r24	; 5
		LCD_AVR_Cmd(m);
     394:	8c 2f       	mov	r24, r28
     396:	82 95       	swap	r24
     398:	8f 70       	andi	r24, 0x0F	; 15
     39a:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
     39e:	8c 2f       	mov	r24, r28
     3a0:	0e 94 32 01 	call	0x264	; 0x264 <LCD_AVR_Cmd>
}
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <LCD_AVR_Print_String>:
void LCD_AVR_Print_String(char *c){
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	ec 01       	movw	r28, r24
	
	char *ptr;
	ptr = c;
	while(*ptr)
     3ae:	03 c0       	rjmp	.+6      	; 0x3b6 <LCD_AVR_Print_String+0xe>
			LCD_AVR_Print_Char(*ptr++);
     3b0:	21 96       	adiw	r28, 0x01	; 1
     3b2:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_AVR_Print_Char>
}
void LCD_AVR_Print_String(char *c){
	
	char *ptr;
	ptr = c;
	while(*ptr)
     3b6:	88 81       	ld	r24, Y
     3b8:	81 11       	cpse	r24, r1
     3ba:	fa cf       	rjmp	.-12     	; 0x3b0 <LCD_AVR_Print_String+0x8>
			LCD_AVR_Print_Char(*ptr++);
	
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	08 95       	ret

000003c2 <main>:
char Str_pot0[20],Str_pot1[20],Str_pot2[20],Str_pot3[20],
	 Str_pot4[20],Str_pot5[20],Str_pot6[20],Str_pot7[20];

int main(void)
{
	ADC_AVR_Init();
     3c2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ADC_AVR_Init>
    LCD_AVR_Init();
     3c6:	0e 94 44 01 	call	0x288	; 0x288 <LCD_AVR_Init>
	
//UBICAMOS LOS INDICADORES
	LCD_AVR_Set_Cursor(0,Fila1);
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("POT1:");
     3d2:	80 e0       	ldi	r24, 0x00	; 0
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(0,Fila2);
     3da:	61 e0       	ldi	r22, 0x01	; 1
     3dc:	80 e0       	ldi	r24, 0x00	; 0
     3de:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("POT2:");
     3e2:	86 e0       	ldi	r24, 0x06	; 6
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(0,Fila3);
     3ea:	62 e0       	ldi	r22, 0x02	; 2
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("POT3:");
     3f2:	8c e0       	ldi	r24, 0x0C	; 12
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(0,Fila4);
     3fa:	63 e0       	ldi	r22, 0x03	; 3
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("POT4:");
     402:	82 e1       	ldi	r24, 0x12	; 18
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(11,Fila1);
     40a:	60 e0       	ldi	r22, 0x00	; 0
     40c:	8b e0       	ldi	r24, 0x0B	; 11
     40e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("POT5:");
     412:	88 e1       	ldi	r24, 0x18	; 24
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(11,Fila2);
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	8b e0       	ldi	r24, 0x0B	; 11
     41e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("POT6:");
     422:	8e e1       	ldi	r24, 0x1E	; 30
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
	
    for(;;) 
    {
		//INICIAMOS LA CONVERSION
		pot0 = AnalogRead(AN0);
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <AnalogRead>
     430:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <pot0+0x1>
     434:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <pot0>
		pot1 = AnalogRead(AN1);
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <AnalogRead>
     43e:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <pot1+0x1>
     442:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <pot1>
		pot2 = AnalogRead(AN2);
     446:	82 e0       	ldi	r24, 0x02	; 2
     448:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <AnalogRead>
     44c:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <pot2+0x1>
     450:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <pot2>
		pot3 = AnalogRead(AN3);
     454:	83 e0       	ldi	r24, 0x03	; 3
     456:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <AnalogRead>
     45a:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <pot3+0x1>
     45e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <pot3>
		pot4 = AnalogRead(AN4);
     462:	84 e0       	ldi	r24, 0x04	; 4
     464:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <AnalogRead>
     468:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <pot4+0x1>
     46c:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <pot4>
		pot5 = AnalogRead(AN5);
     470:	85 e0       	ldi	r24, 0x05	; 5
     472:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <AnalogRead>
     476:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
     47a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
	
		
		//CONVERTIMOS UINT A STRING
		
		sprintf((char*)Str_pot0,"%04u",pot0);
     47e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <pot0+0x1>
     482:	8f 93       	push	r24
     484:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <pot0>
     488:	8f 93       	push	r24
     48a:	c4 e2       	ldi	r28, 0x24	; 36
     48c:	d1 e0       	ldi	r29, 0x01	; 1
     48e:	df 93       	push	r29
     490:	cf 93       	push	r28
     492:	8a e9       	ldi	r24, 0x9A	; 154
     494:	91 e0       	ldi	r25, 0x01	; 1
     496:	9f 93       	push	r25
     498:	8f 93       	push	r24
     49a:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		sprintf((char*)Str_pot1,"%04u",pot1);
     49e:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <pot1+0x1>
     4a2:	8f 93       	push	r24
     4a4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <pot1>
     4a8:	8f 93       	push	r24
     4aa:	df 93       	push	r29
     4ac:	cf 93       	push	r28
     4ae:	82 ec       	ldi	r24, 0xC2	; 194
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	9f 93       	push	r25
     4b4:	8f 93       	push	r24
     4b6:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		sprintf((char*)Str_pot2,"%04u",pot2);
     4ba:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <pot2+0x1>
     4be:	8f 93       	push	r24
     4c0:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <pot2>
     4c4:	8f 93       	push	r24
     4c6:	df 93       	push	r29
     4c8:	cf 93       	push	r28
     4ca:	8e e5       	ldi	r24, 0x5E	; 94
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	9f 93       	push	r25
     4d0:	8f 93       	push	r24
     4d2:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		sprintf((char*)Str_pot3,"%04u",pot3);
     4d6:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <pot3+0x1>
     4da:	8f 93       	push	r24
     4dc:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <pot3>
     4e0:	8f 93       	push	r24
     4e2:	df 93       	push	r29
     4e4:	cf 93       	push	r28
     4e6:	8e ea       	ldi	r24, 0xAE	; 174
     4e8:	91 e0       	ldi	r25, 0x01	; 1
     4ea:	9f 93       	push	r25
     4ec:	8f 93       	push	r24
     4ee:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		sprintf((char*)Str_pot4,"%04u",pot4);
     4f2:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <pot4+0x1>
     4f6:	8f 93       	push	r24
     4f8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <pot4>
     4fc:	8f 93       	push	r24
     4fe:	df 93       	push	r29
     500:	cf 93       	push	r28
     502:	8a e4       	ldi	r24, 0x4A	; 74
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	9f 93       	push	r25
     508:	8f 93       	push	r24
     50a:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
		sprintf((char*)Str_pot5,"%04u",pot5);
     50e:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <__data_end+0x1>
     512:	8f 93       	push	r24
     514:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
     518:	8f 93       	push	r24
     51a:	df 93       	push	r29
     51c:	cf 93       	push	r28
     51e:	82 e7       	ldi	r24, 0x72	; 114
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	9f 93       	push	r25
     524:	8f 93       	push	r24
     526:	0e 94 ac 07 	call	0xf58	; 0xf58 <sprintf>
    
		//ESCRIBIMOS LA LCD
		LCD_AVR_Set_Cursor(5,Fila1);
     52a:	8d b7       	in	r24, 0x3d	; 61
     52c:	9e b7       	in	r25, 0x3e	; 62
     52e:	84 96       	adiw	r24, 0x24	; 36
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	9e bf       	out	0x3e, r25	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	8d bf       	out	0x3d, r24	; 61
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	85 e0       	ldi	r24, 0x05	; 5
     53e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
		LCD_AVR_Print_String(Str_pot0);
     542:	8a e9       	ldi	r24, 0x9A	; 154
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
		LCD_AVR_Set_Cursor(5,Fila2);
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	85 e0       	ldi	r24, 0x05	; 5
     54e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
		LCD_AVR_Print_String(Str_pot1);
     552:	82 ec       	ldi	r24, 0xC2	; 194
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
		LCD_AVR_Set_Cursor(5,Fila3);
     55a:	62 e0       	ldi	r22, 0x02	; 2
     55c:	85 e0       	ldi	r24, 0x05	; 5
     55e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
		LCD_AVR_Print_String(Str_pot2);
     562:	8e e5       	ldi	r24, 0x5E	; 94
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
		LCD_AVR_Set_Cursor(5,Fila4);
     56a:	63 e0       	ldi	r22, 0x03	; 3
     56c:	85 e0       	ldi	r24, 0x05	; 5
     56e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
		LCD_AVR_Print_String(Str_pot3);
     572:	8e ea       	ldi	r24, 0xAE	; 174
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
		LCD_AVR_Set_Cursor(16,Fila1);
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	80 e1       	ldi	r24, 0x10	; 16
     57e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
		LCD_AVR_Print_String(Str_pot3);
     582:	8e ea       	ldi	r24, 0xAE	; 174
     584:	91 e0       	ldi	r25, 0x01	; 1
     586:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
		LCD_AVR_Set_Cursor(16,Fila2);
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	80 e1       	ldi	r24, 0x10	; 16
     58e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <LCD_AVR_Set_Cursor>
		LCD_AVR_Print_String(Str_pot3);
     592:	8e ea       	ldi	r24, 0xAE	; 174
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LCD_AVR_Print_String>
     59a:	47 cf       	rjmp	.-370    	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>

0000059c <vfprintf>:
     59c:	a0 e1       	ldi	r26, 0x10	; 16
     59e:	b0 e0       	ldi	r27, 0x00	; 0
     5a0:	e4 ed       	ldi	r30, 0xD4	; 212
     5a2:	f2 e0       	ldi	r31, 0x02	; 2
     5a4:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__prologue_saves__>
     5a8:	7c 01       	movw	r14, r24
     5aa:	1b 01       	movw	r2, r22
     5ac:	6a 01       	movw	r12, r20
     5ae:	fc 01       	movw	r30, r24
     5b0:	17 82       	std	Z+7, r1	; 0x07
     5b2:	16 82       	std	Z+6, r1	; 0x06
     5b4:	83 81       	ldd	r24, Z+3	; 0x03
     5b6:	81 ff       	sbrs	r24, 1
     5b8:	44 c3       	rjmp	.+1672   	; 0xc42 <__stack+0x343>
     5ba:	9e 01       	movw	r18, r28
     5bc:	2f 5f       	subi	r18, 0xFF	; 255
     5be:	3f 4f       	sbci	r19, 0xFF	; 255
     5c0:	39 01       	movw	r6, r18
     5c2:	f7 01       	movw	r30, r14
     5c4:	93 81       	ldd	r25, Z+3	; 0x03
     5c6:	f1 01       	movw	r30, r2
     5c8:	93 fd       	sbrc	r25, 3
     5ca:	85 91       	lpm	r24, Z+
     5cc:	93 ff       	sbrs	r25, 3
     5ce:	81 91       	ld	r24, Z+
     5d0:	1f 01       	movw	r2, r30
     5d2:	88 23       	and	r24, r24
     5d4:	09 f4       	brne	.+2      	; 0x5d8 <vfprintf+0x3c>
     5d6:	31 c3       	rjmp	.+1634   	; 0xc3a <__stack+0x33b>
     5d8:	85 32       	cpi	r24, 0x25	; 37
     5da:	39 f4       	brne	.+14     	; 0x5ea <vfprintf+0x4e>
     5dc:	93 fd       	sbrc	r25, 3
     5de:	85 91       	lpm	r24, Z+
     5e0:	93 ff       	sbrs	r25, 3
     5e2:	81 91       	ld	r24, Z+
     5e4:	1f 01       	movw	r2, r30
     5e6:	85 32       	cpi	r24, 0x25	; 37
     5e8:	39 f4       	brne	.+14     	; 0x5f8 <vfprintf+0x5c>
     5ea:	b7 01       	movw	r22, r14
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     5f2:	56 01       	movw	r10, r12
     5f4:	65 01       	movw	r12, r10
     5f6:	e5 cf       	rjmp	.-54     	; 0x5c2 <vfprintf+0x26>
     5f8:	10 e0       	ldi	r17, 0x00	; 0
     5fa:	51 2c       	mov	r5, r1
     5fc:	91 2c       	mov	r9, r1
     5fe:	ff e1       	ldi	r31, 0x1F	; 31
     600:	f9 15       	cp	r31, r9
     602:	d8 f0       	brcs	.+54     	; 0x63a <vfprintf+0x9e>
     604:	8b 32       	cpi	r24, 0x2B	; 43
     606:	79 f0       	breq	.+30     	; 0x626 <vfprintf+0x8a>
     608:	38 f4       	brcc	.+14     	; 0x618 <vfprintf+0x7c>
     60a:	80 32       	cpi	r24, 0x20	; 32
     60c:	79 f0       	breq	.+30     	; 0x62c <vfprintf+0x90>
     60e:	83 32       	cpi	r24, 0x23	; 35
     610:	a1 f4       	brne	.+40     	; 0x63a <vfprintf+0x9e>
     612:	f9 2d       	mov	r31, r9
     614:	f0 61       	ori	r31, 0x10	; 16
     616:	2e c0       	rjmp	.+92     	; 0x674 <vfprintf+0xd8>
     618:	8d 32       	cpi	r24, 0x2D	; 45
     61a:	61 f0       	breq	.+24     	; 0x634 <vfprintf+0x98>
     61c:	80 33       	cpi	r24, 0x30	; 48
     61e:	69 f4       	brne	.+26     	; 0x63a <vfprintf+0x9e>
     620:	29 2d       	mov	r18, r9
     622:	21 60       	ori	r18, 0x01	; 1
     624:	2d c0       	rjmp	.+90     	; 0x680 <vfprintf+0xe4>
     626:	39 2d       	mov	r19, r9
     628:	32 60       	ori	r19, 0x02	; 2
     62a:	93 2e       	mov	r9, r19
     62c:	89 2d       	mov	r24, r9
     62e:	84 60       	ori	r24, 0x04	; 4
     630:	98 2e       	mov	r9, r24
     632:	2a c0       	rjmp	.+84     	; 0x688 <vfprintf+0xec>
     634:	e9 2d       	mov	r30, r9
     636:	e8 60       	ori	r30, 0x08	; 8
     638:	15 c0       	rjmp	.+42     	; 0x664 <vfprintf+0xc8>
     63a:	97 fc       	sbrc	r9, 7
     63c:	2d c0       	rjmp	.+90     	; 0x698 <vfprintf+0xfc>
     63e:	20 ed       	ldi	r18, 0xD0	; 208
     640:	28 0f       	add	r18, r24
     642:	2a 30       	cpi	r18, 0x0A	; 10
     644:	88 f4       	brcc	.+34     	; 0x668 <vfprintf+0xcc>
     646:	96 fe       	sbrs	r9, 6
     648:	06 c0       	rjmp	.+12     	; 0x656 <vfprintf+0xba>
     64a:	3a e0       	ldi	r19, 0x0A	; 10
     64c:	13 9f       	mul	r17, r19
     64e:	20 0d       	add	r18, r0
     650:	11 24       	eor	r1, r1
     652:	12 2f       	mov	r17, r18
     654:	19 c0       	rjmp	.+50     	; 0x688 <vfprintf+0xec>
     656:	8a e0       	ldi	r24, 0x0A	; 10
     658:	58 9e       	mul	r5, r24
     65a:	20 0d       	add	r18, r0
     65c:	11 24       	eor	r1, r1
     65e:	52 2e       	mov	r5, r18
     660:	e9 2d       	mov	r30, r9
     662:	e0 62       	ori	r30, 0x20	; 32
     664:	9e 2e       	mov	r9, r30
     666:	10 c0       	rjmp	.+32     	; 0x688 <vfprintf+0xec>
     668:	8e 32       	cpi	r24, 0x2E	; 46
     66a:	31 f4       	brne	.+12     	; 0x678 <vfprintf+0xdc>
     66c:	96 fc       	sbrc	r9, 6
     66e:	e5 c2       	rjmp	.+1482   	; 0xc3a <__stack+0x33b>
     670:	f9 2d       	mov	r31, r9
     672:	f0 64       	ori	r31, 0x40	; 64
     674:	9f 2e       	mov	r9, r31
     676:	08 c0       	rjmp	.+16     	; 0x688 <vfprintf+0xec>
     678:	8c 36       	cpi	r24, 0x6C	; 108
     67a:	21 f4       	brne	.+8      	; 0x684 <vfprintf+0xe8>
     67c:	29 2d       	mov	r18, r9
     67e:	20 68       	ori	r18, 0x80	; 128
     680:	92 2e       	mov	r9, r18
     682:	02 c0       	rjmp	.+4      	; 0x688 <vfprintf+0xec>
     684:	88 36       	cpi	r24, 0x68	; 104
     686:	41 f4       	brne	.+16     	; 0x698 <vfprintf+0xfc>
     688:	f1 01       	movw	r30, r2
     68a:	93 fd       	sbrc	r25, 3
     68c:	85 91       	lpm	r24, Z+
     68e:	93 ff       	sbrs	r25, 3
     690:	81 91       	ld	r24, Z+
     692:	1f 01       	movw	r2, r30
     694:	81 11       	cpse	r24, r1
     696:	b3 cf       	rjmp	.-154    	; 0x5fe <vfprintf+0x62>
     698:	9b eb       	ldi	r25, 0xBB	; 187
     69a:	98 0f       	add	r25, r24
     69c:	93 30       	cpi	r25, 0x03	; 3
     69e:	20 f4       	brcc	.+8      	; 0x6a8 <vfprintf+0x10c>
     6a0:	99 2d       	mov	r25, r9
     6a2:	90 61       	ori	r25, 0x10	; 16
     6a4:	80 5e       	subi	r24, 0xE0	; 224
     6a6:	07 c0       	rjmp	.+14     	; 0x6b6 <vfprintf+0x11a>
     6a8:	9b e9       	ldi	r25, 0x9B	; 155
     6aa:	98 0f       	add	r25, r24
     6ac:	93 30       	cpi	r25, 0x03	; 3
     6ae:	08 f0       	brcs	.+2      	; 0x6b2 <vfprintf+0x116>
     6b0:	66 c1       	rjmp	.+716    	; 0x97e <__stack+0x7f>
     6b2:	99 2d       	mov	r25, r9
     6b4:	9f 7e       	andi	r25, 0xEF	; 239
     6b6:	96 ff       	sbrs	r25, 6
     6b8:	16 e0       	ldi	r17, 0x06	; 6
     6ba:	9f 73       	andi	r25, 0x3F	; 63
     6bc:	99 2e       	mov	r9, r25
     6be:	85 36       	cpi	r24, 0x65	; 101
     6c0:	19 f4       	brne	.+6      	; 0x6c8 <vfprintf+0x12c>
     6c2:	90 64       	ori	r25, 0x40	; 64
     6c4:	99 2e       	mov	r9, r25
     6c6:	08 c0       	rjmp	.+16     	; 0x6d8 <vfprintf+0x13c>
     6c8:	86 36       	cpi	r24, 0x66	; 102
     6ca:	21 f4       	brne	.+8      	; 0x6d4 <vfprintf+0x138>
     6cc:	39 2f       	mov	r19, r25
     6ce:	30 68       	ori	r19, 0x80	; 128
     6d0:	93 2e       	mov	r9, r19
     6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <vfprintf+0x13c>
     6d4:	11 11       	cpse	r17, r1
     6d6:	11 50       	subi	r17, 0x01	; 1
     6d8:	97 fe       	sbrs	r9, 7
     6da:	07 c0       	rjmp	.+14     	; 0x6ea <vfprintf+0x14e>
     6dc:	1c 33       	cpi	r17, 0x3C	; 60
     6de:	50 f4       	brcc	.+20     	; 0x6f4 <vfprintf+0x158>
     6e0:	44 24       	eor	r4, r4
     6e2:	43 94       	inc	r4
     6e4:	41 0e       	add	r4, r17
     6e6:	27 e0       	ldi	r18, 0x07	; 7
     6e8:	0b c0       	rjmp	.+22     	; 0x700 <vfprintf+0x164>
     6ea:	18 30       	cpi	r17, 0x08	; 8
     6ec:	38 f0       	brcs	.+14     	; 0x6fc <vfprintf+0x160>
     6ee:	27 e0       	ldi	r18, 0x07	; 7
     6f0:	17 e0       	ldi	r17, 0x07	; 7
     6f2:	05 c0       	rjmp	.+10     	; 0x6fe <vfprintf+0x162>
     6f4:	27 e0       	ldi	r18, 0x07	; 7
     6f6:	9c e3       	ldi	r25, 0x3C	; 60
     6f8:	49 2e       	mov	r4, r25
     6fa:	02 c0       	rjmp	.+4      	; 0x700 <vfprintf+0x164>
     6fc:	21 2f       	mov	r18, r17
     6fe:	41 2c       	mov	r4, r1
     700:	56 01       	movw	r10, r12
     702:	84 e0       	ldi	r24, 0x04	; 4
     704:	a8 0e       	add	r10, r24
     706:	b1 1c       	adc	r11, r1
     708:	f6 01       	movw	r30, r12
     70a:	60 81       	ld	r22, Z
     70c:	71 81       	ldd	r23, Z+1	; 0x01
     70e:	82 81       	ldd	r24, Z+2	; 0x02
     710:	93 81       	ldd	r25, Z+3	; 0x03
     712:	04 2d       	mov	r16, r4
     714:	a3 01       	movw	r20, r6
     716:	0e 94 82 06 	call	0xd04	; 0xd04 <__ftoa_engine>
     71a:	6c 01       	movw	r12, r24
     71c:	f9 81       	ldd	r31, Y+1	; 0x01
     71e:	fc 87       	std	Y+12, r31	; 0x0c
     720:	f0 ff       	sbrs	r31, 0
     722:	02 c0       	rjmp	.+4      	; 0x728 <vfprintf+0x18c>
     724:	f3 ff       	sbrs	r31, 3
     726:	06 c0       	rjmp	.+12     	; 0x734 <vfprintf+0x198>
     728:	91 fc       	sbrc	r9, 1
     72a:	06 c0       	rjmp	.+12     	; 0x738 <vfprintf+0x19c>
     72c:	92 fe       	sbrs	r9, 2
     72e:	06 c0       	rjmp	.+12     	; 0x73c <vfprintf+0x1a0>
     730:	00 e2       	ldi	r16, 0x20	; 32
     732:	05 c0       	rjmp	.+10     	; 0x73e <vfprintf+0x1a2>
     734:	0d e2       	ldi	r16, 0x2D	; 45
     736:	03 c0       	rjmp	.+6      	; 0x73e <vfprintf+0x1a2>
     738:	0b e2       	ldi	r16, 0x2B	; 43
     73a:	01 c0       	rjmp	.+2      	; 0x73e <vfprintf+0x1a2>
     73c:	00 e0       	ldi	r16, 0x00	; 0
     73e:	8c 85       	ldd	r24, Y+12	; 0x0c
     740:	8c 70       	andi	r24, 0x0C	; 12
     742:	19 f0       	breq	.+6      	; 0x74a <vfprintf+0x1ae>
     744:	01 11       	cpse	r16, r1
     746:	5a c2       	rjmp	.+1204   	; 0xbfc <__stack+0x2fd>
     748:	9b c2       	rjmp	.+1334   	; 0xc80 <__stack+0x381>
     74a:	97 fe       	sbrs	r9, 7
     74c:	10 c0       	rjmp	.+32     	; 0x76e <vfprintf+0x1d2>
     74e:	4c 0c       	add	r4, r12
     750:	fc 85       	ldd	r31, Y+12	; 0x0c
     752:	f4 ff       	sbrs	r31, 4
     754:	04 c0       	rjmp	.+8      	; 0x75e <vfprintf+0x1c2>
     756:	8a 81       	ldd	r24, Y+2	; 0x02
     758:	81 33       	cpi	r24, 0x31	; 49
     75a:	09 f4       	brne	.+2      	; 0x75e <vfprintf+0x1c2>
     75c:	4a 94       	dec	r4
     75e:	14 14       	cp	r1, r4
     760:	74 f5       	brge	.+92     	; 0x7be <vfprintf+0x222>
     762:	28 e0       	ldi	r18, 0x08	; 8
     764:	24 15       	cp	r18, r4
     766:	78 f5       	brcc	.+94     	; 0x7c6 <vfprintf+0x22a>
     768:	88 e0       	ldi	r24, 0x08	; 8
     76a:	48 2e       	mov	r4, r24
     76c:	2c c0       	rjmp	.+88     	; 0x7c6 <vfprintf+0x22a>
     76e:	96 fc       	sbrc	r9, 6
     770:	2a c0       	rjmp	.+84     	; 0x7c6 <vfprintf+0x22a>
     772:	81 2f       	mov	r24, r17
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	8c 15       	cp	r24, r12
     778:	9d 05       	cpc	r25, r13
     77a:	9c f0       	brlt	.+38     	; 0x7a2 <vfprintf+0x206>
     77c:	3c ef       	ldi	r19, 0xFC	; 252
     77e:	c3 16       	cp	r12, r19
     780:	3f ef       	ldi	r19, 0xFF	; 255
     782:	d3 06       	cpc	r13, r19
     784:	74 f0       	brlt	.+28     	; 0x7a2 <vfprintf+0x206>
     786:	89 2d       	mov	r24, r9
     788:	80 68       	ori	r24, 0x80	; 128
     78a:	98 2e       	mov	r9, r24
     78c:	0a c0       	rjmp	.+20     	; 0x7a2 <vfprintf+0x206>
     78e:	e2 e0       	ldi	r30, 0x02	; 2
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	ec 0f       	add	r30, r28
     794:	fd 1f       	adc	r31, r29
     796:	e1 0f       	add	r30, r17
     798:	f1 1d       	adc	r31, r1
     79a:	80 81       	ld	r24, Z
     79c:	80 33       	cpi	r24, 0x30	; 48
     79e:	19 f4       	brne	.+6      	; 0x7a6 <vfprintf+0x20a>
     7a0:	11 50       	subi	r17, 0x01	; 1
     7a2:	11 11       	cpse	r17, r1
     7a4:	f4 cf       	rjmp	.-24     	; 0x78e <vfprintf+0x1f2>
     7a6:	97 fe       	sbrs	r9, 7
     7a8:	0e c0       	rjmp	.+28     	; 0x7c6 <vfprintf+0x22a>
     7aa:	44 24       	eor	r4, r4
     7ac:	43 94       	inc	r4
     7ae:	41 0e       	add	r4, r17
     7b0:	81 2f       	mov	r24, r17
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	c8 16       	cp	r12, r24
     7b6:	d9 06       	cpc	r13, r25
     7b8:	2c f4       	brge	.+10     	; 0x7c4 <vfprintf+0x228>
     7ba:	1c 19       	sub	r17, r12
     7bc:	04 c0       	rjmp	.+8      	; 0x7c6 <vfprintf+0x22a>
     7be:	44 24       	eor	r4, r4
     7c0:	43 94       	inc	r4
     7c2:	01 c0       	rjmp	.+2      	; 0x7c6 <vfprintf+0x22a>
     7c4:	10 e0       	ldi	r17, 0x00	; 0
     7c6:	97 fe       	sbrs	r9, 7
     7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <vfprintf+0x23a>
     7ca:	1c 14       	cp	r1, r12
     7cc:	1d 04       	cpc	r1, r13
     7ce:	34 f4       	brge	.+12     	; 0x7dc <vfprintf+0x240>
     7d0:	c6 01       	movw	r24, r12
     7d2:	01 96       	adiw	r24, 0x01	; 1
     7d4:	05 c0       	rjmp	.+10     	; 0x7e0 <vfprintf+0x244>
     7d6:	85 e0       	ldi	r24, 0x05	; 5
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	02 c0       	rjmp	.+4      	; 0x7e0 <vfprintf+0x244>
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	01 11       	cpse	r16, r1
     7e2:	01 96       	adiw	r24, 0x01	; 1
     7e4:	11 23       	and	r17, r17
     7e6:	31 f0       	breq	.+12     	; 0x7f4 <vfprintf+0x258>
     7e8:	21 2f       	mov	r18, r17
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	2f 5f       	subi	r18, 0xFF	; 255
     7ee:	3f 4f       	sbci	r19, 0xFF	; 255
     7f0:	82 0f       	add	r24, r18
     7f2:	93 1f       	adc	r25, r19
     7f4:	25 2d       	mov	r18, r5
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	82 17       	cp	r24, r18
     7fa:	93 07       	cpc	r25, r19
     7fc:	14 f4       	brge	.+4      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     7fe:	58 1a       	sub	r5, r24
     800:	01 c0       	rjmp	.+2      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     802:	51 2c       	mov	r5, r1
     804:	89 2d       	mov	r24, r9
     806:	89 70       	andi	r24, 0x09	; 9
     808:	49 f4       	brne	.+18     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     80a:	55 20       	and	r5, r5
     80c:	39 f0       	breq	.+14     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     80e:	b7 01       	movw	r22, r14
     810:	80 e2       	ldi	r24, 0x20	; 32
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     818:	5a 94       	dec	r5
     81a:	f7 cf       	rjmp	.-18     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     81c:	00 23       	and	r16, r16
     81e:	29 f0       	breq	.+10     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     820:	b7 01       	movw	r22, r14
     822:	80 2f       	mov	r24, r16
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     82a:	93 fc       	sbrc	r9, 3
     82c:	09 c0       	rjmp	.+18     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     82e:	55 20       	and	r5, r5
     830:	39 f0       	breq	.+14     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     832:	b7 01       	movw	r22, r14
     834:	80 e3       	ldi	r24, 0x30	; 48
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     83c:	5a 94       	dec	r5
     83e:	f7 cf       	rjmp	.-18     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     840:	97 fe       	sbrs	r9, 7
     842:	4c c0       	rjmp	.+152    	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
     844:	46 01       	movw	r8, r12
     846:	d7 fe       	sbrs	r13, 7
     848:	02 c0       	rjmp	.+4      	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     84a:	81 2c       	mov	r8, r1
     84c:	91 2c       	mov	r9, r1
     84e:	c6 01       	movw	r24, r12
     850:	88 19       	sub	r24, r8
     852:	99 09       	sbc	r25, r9
     854:	f3 01       	movw	r30, r6
     856:	e8 0f       	add	r30, r24
     858:	f9 1f       	adc	r31, r25
     85a:	fe 87       	std	Y+14, r31	; 0x0e
     85c:	ed 87       	std	Y+13, r30	; 0x0d
     85e:	96 01       	movw	r18, r12
     860:	24 19       	sub	r18, r4
     862:	31 09       	sbc	r19, r1
     864:	38 8b       	std	Y+16, r19	; 0x10
     866:	2f 87       	std	Y+15, r18	; 0x0f
     868:	01 2f       	mov	r16, r17
     86a:	10 e0       	ldi	r17, 0x00	; 0
     86c:	11 95       	neg	r17
     86e:	01 95       	neg	r16
     870:	11 09       	sbc	r17, r1
     872:	3f ef       	ldi	r19, 0xFF	; 255
     874:	83 16       	cp	r8, r19
     876:	93 06       	cpc	r9, r19
     878:	29 f4       	brne	.+10     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
     87a:	b7 01       	movw	r22, r14
     87c:	8e e2       	ldi	r24, 0x2E	; 46
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     884:	c8 14       	cp	r12, r8
     886:	d9 04       	cpc	r13, r9
     888:	4c f0       	brlt	.+18     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
     88a:	8f 85       	ldd	r24, Y+15	; 0x0f
     88c:	98 89       	ldd	r25, Y+16	; 0x10
     88e:	88 15       	cp	r24, r8
     890:	99 05       	cpc	r25, r9
     892:	24 f4       	brge	.+8      	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
     894:	ed 85       	ldd	r30, Y+13	; 0x0d
     896:	fe 85       	ldd	r31, Y+14	; 0x0e
     898:	81 81       	ldd	r24, Z+1	; 0x01
     89a:	01 c0       	rjmp	.+2      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     89c:	80 e3       	ldi	r24, 0x30	; 48
     89e:	f1 e0       	ldi	r31, 0x01	; 1
     8a0:	8f 1a       	sub	r8, r31
     8a2:	91 08       	sbc	r9, r1
     8a4:	2d 85       	ldd	r18, Y+13	; 0x0d
     8a6:	3e 85       	ldd	r19, Y+14	; 0x0e
     8a8:	2f 5f       	subi	r18, 0xFF	; 255
     8aa:	3f 4f       	sbci	r19, 0xFF	; 255
     8ac:	3e 87       	std	Y+14, r19	; 0x0e
     8ae:	2d 87       	std	Y+13, r18	; 0x0d
     8b0:	80 16       	cp	r8, r16
     8b2:	91 06       	cpc	r9, r17
     8b4:	2c f0       	brlt	.+10     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     8b6:	b7 01       	movw	r22, r14
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     8be:	d9 cf       	rjmp	.-78     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     8c0:	c8 14       	cp	r12, r8
     8c2:	d9 04       	cpc	r13, r9
     8c4:	41 f4       	brne	.+16     	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
     8c6:	9a 81       	ldd	r25, Y+2	; 0x02
     8c8:	96 33       	cpi	r25, 0x36	; 54
     8ca:	20 f4       	brcc	.+8      	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
     8cc:	95 33       	cpi	r25, 0x35	; 53
     8ce:	19 f4       	brne	.+6      	; 0x8d6 <__DATA_REGION_LENGTH__+0xd6>
     8d0:	3c 85       	ldd	r19, Y+12	; 0x0c
     8d2:	34 ff       	sbrs	r19, 4
     8d4:	81 e3       	ldi	r24, 0x31	; 49
     8d6:	b7 01       	movw	r22, r14
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	4e c0       	rjmp	.+156    	; 0x978 <__stack+0x79>
     8dc:	8a 81       	ldd	r24, Y+2	; 0x02
     8de:	81 33       	cpi	r24, 0x31	; 49
     8e0:	19 f0       	breq	.+6      	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
     8e2:	9c 85       	ldd	r25, Y+12	; 0x0c
     8e4:	9f 7e       	andi	r25, 0xEF	; 239
     8e6:	9c 87       	std	Y+12, r25	; 0x0c
     8e8:	b7 01       	movw	r22, r14
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     8f0:	11 11       	cpse	r17, r1
     8f2:	05 c0       	rjmp	.+10     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
     8f4:	94 fc       	sbrc	r9, 4
     8f6:	18 c0       	rjmp	.+48     	; 0x928 <__stack+0x29>
     8f8:	85 e6       	ldi	r24, 0x65	; 101
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	17 c0       	rjmp	.+46     	; 0x92c <__stack+0x2d>
     8fe:	b7 01       	movw	r22, r14
     900:	8e e2       	ldi	r24, 0x2E	; 46
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     908:	1e 5f       	subi	r17, 0xFE	; 254
     90a:	82 e0       	ldi	r24, 0x02	; 2
     90c:	01 e0       	ldi	r16, 0x01	; 1
     90e:	08 0f       	add	r16, r24
     910:	f3 01       	movw	r30, r6
     912:	e8 0f       	add	r30, r24
     914:	f1 1d       	adc	r31, r1
     916:	80 81       	ld	r24, Z
     918:	b7 01       	movw	r22, r14
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     920:	80 2f       	mov	r24, r16
     922:	01 13       	cpse	r16, r17
     924:	f3 cf       	rjmp	.-26     	; 0x90c <__stack+0xd>
     926:	e6 cf       	rjmp	.-52     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
     928:	85 e4       	ldi	r24, 0x45	; 69
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	b7 01       	movw	r22, r14
     92e:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     932:	d7 fc       	sbrc	r13, 7
     934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0x43>
     936:	c1 14       	cp	r12, r1
     938:	d1 04       	cpc	r13, r1
     93a:	41 f4       	brne	.+16     	; 0x94c <__stack+0x4d>
     93c:	ec 85       	ldd	r30, Y+12	; 0x0c
     93e:	e4 ff       	sbrs	r30, 4
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0x4d>
     942:	d1 94       	neg	r13
     944:	c1 94       	neg	r12
     946:	d1 08       	sbc	r13, r1
     948:	8d e2       	ldi	r24, 0x2D	; 45
     94a:	01 c0       	rjmp	.+2      	; 0x94e <__stack+0x4f>
     94c:	8b e2       	ldi	r24, 0x2B	; 43
     94e:	b7 01       	movw	r22, r14
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     956:	80 e3       	ldi	r24, 0x30	; 48
     958:	2a e0       	ldi	r18, 0x0A	; 10
     95a:	c2 16       	cp	r12, r18
     95c:	d1 04       	cpc	r13, r1
     95e:	2c f0       	brlt	.+10     	; 0x96a <__stack+0x6b>
     960:	8f 5f       	subi	r24, 0xFF	; 255
     962:	fa e0       	ldi	r31, 0x0A	; 10
     964:	cf 1a       	sub	r12, r31
     966:	d1 08       	sbc	r13, r1
     968:	f7 cf       	rjmp	.-18     	; 0x958 <__stack+0x59>
     96a:	b7 01       	movw	r22, r14
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     972:	b7 01       	movw	r22, r14
     974:	c6 01       	movw	r24, r12
     976:	c0 96       	adiw	r24, 0x30	; 48
     978:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     97c:	54 c1       	rjmp	.+680    	; 0xc26 <__stack+0x327>
     97e:	83 36       	cpi	r24, 0x63	; 99
     980:	31 f0       	breq	.+12     	; 0x98e <__stack+0x8f>
     982:	83 37       	cpi	r24, 0x73	; 115
     984:	79 f0       	breq	.+30     	; 0x9a4 <__stack+0xa5>
     986:	83 35       	cpi	r24, 0x53	; 83
     988:	09 f0       	breq	.+2      	; 0x98c <__stack+0x8d>
     98a:	56 c0       	rjmp	.+172    	; 0xa38 <__stack+0x139>
     98c:	20 c0       	rjmp	.+64     	; 0x9ce <__stack+0xcf>
     98e:	56 01       	movw	r10, r12
     990:	32 e0       	ldi	r19, 0x02	; 2
     992:	a3 0e       	add	r10, r19
     994:	b1 1c       	adc	r11, r1
     996:	f6 01       	movw	r30, r12
     998:	80 81       	ld	r24, Z
     99a:	89 83       	std	Y+1, r24	; 0x01
     99c:	01 e0       	ldi	r16, 0x01	; 1
     99e:	10 e0       	ldi	r17, 0x00	; 0
     9a0:	63 01       	movw	r12, r6
     9a2:	12 c0       	rjmp	.+36     	; 0x9c8 <__stack+0xc9>
     9a4:	56 01       	movw	r10, r12
     9a6:	f2 e0       	ldi	r31, 0x02	; 2
     9a8:	af 0e       	add	r10, r31
     9aa:	b1 1c       	adc	r11, r1
     9ac:	f6 01       	movw	r30, r12
     9ae:	c0 80       	ld	r12, Z
     9b0:	d1 80       	ldd	r13, Z+1	; 0x01
     9b2:	96 fe       	sbrs	r9, 6
     9b4:	03 c0       	rjmp	.+6      	; 0x9bc <__stack+0xbd>
     9b6:	61 2f       	mov	r22, r17
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	02 c0       	rjmp	.+4      	; 0x9c0 <__stack+0xc1>
     9bc:	6f ef       	ldi	r22, 0xFF	; 255
     9be:	7f ef       	ldi	r23, 0xFF	; 255
     9c0:	c6 01       	movw	r24, r12
     9c2:	0e 94 65 07 	call	0xeca	; 0xeca <strnlen>
     9c6:	8c 01       	movw	r16, r24
     9c8:	f9 2d       	mov	r31, r9
     9ca:	ff 77       	andi	r31, 0x7F	; 127
     9cc:	14 c0       	rjmp	.+40     	; 0x9f6 <__stack+0xf7>
     9ce:	56 01       	movw	r10, r12
     9d0:	22 e0       	ldi	r18, 0x02	; 2
     9d2:	a2 0e       	add	r10, r18
     9d4:	b1 1c       	adc	r11, r1
     9d6:	f6 01       	movw	r30, r12
     9d8:	c0 80       	ld	r12, Z
     9da:	d1 80       	ldd	r13, Z+1	; 0x01
     9dc:	96 fe       	sbrs	r9, 6
     9de:	03 c0       	rjmp	.+6      	; 0x9e6 <__stack+0xe7>
     9e0:	61 2f       	mov	r22, r17
     9e2:	70 e0       	ldi	r23, 0x00	; 0
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0xeb>
     9e6:	6f ef       	ldi	r22, 0xFF	; 255
     9e8:	7f ef       	ldi	r23, 0xFF	; 255
     9ea:	c6 01       	movw	r24, r12
     9ec:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <strnlen_P>
     9f0:	8c 01       	movw	r16, r24
     9f2:	f9 2d       	mov	r31, r9
     9f4:	f0 68       	ori	r31, 0x80	; 128
     9f6:	9f 2e       	mov	r9, r31
     9f8:	f3 fd       	sbrc	r31, 3
     9fa:	1a c0       	rjmp	.+52     	; 0xa30 <__stack+0x131>
     9fc:	85 2d       	mov	r24, r5
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	08 17       	cp	r16, r24
     a02:	19 07       	cpc	r17, r25
     a04:	a8 f4       	brcc	.+42     	; 0xa30 <__stack+0x131>
     a06:	b7 01       	movw	r22, r14
     a08:	80 e2       	ldi	r24, 0x20	; 32
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     a10:	5a 94       	dec	r5
     a12:	f4 cf       	rjmp	.-24     	; 0x9fc <__stack+0xfd>
     a14:	f6 01       	movw	r30, r12
     a16:	97 fc       	sbrc	r9, 7
     a18:	85 91       	lpm	r24, Z+
     a1a:	97 fe       	sbrs	r9, 7
     a1c:	81 91       	ld	r24, Z+
     a1e:	6f 01       	movw	r12, r30
     a20:	b7 01       	movw	r22, r14
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     a28:	51 10       	cpse	r5, r1
     a2a:	5a 94       	dec	r5
     a2c:	01 50       	subi	r16, 0x01	; 1
     a2e:	11 09       	sbc	r17, r1
     a30:	01 15       	cp	r16, r1
     a32:	11 05       	cpc	r17, r1
     a34:	79 f7       	brne	.-34     	; 0xa14 <__stack+0x115>
     a36:	f7 c0       	rjmp	.+494    	; 0xc26 <__stack+0x327>
     a38:	84 36       	cpi	r24, 0x64	; 100
     a3a:	11 f0       	breq	.+4      	; 0xa40 <__stack+0x141>
     a3c:	89 36       	cpi	r24, 0x69	; 105
     a3e:	61 f5       	brne	.+88     	; 0xa98 <__stack+0x199>
     a40:	56 01       	movw	r10, r12
     a42:	97 fe       	sbrs	r9, 7
     a44:	09 c0       	rjmp	.+18     	; 0xa58 <__stack+0x159>
     a46:	24 e0       	ldi	r18, 0x04	; 4
     a48:	a2 0e       	add	r10, r18
     a4a:	b1 1c       	adc	r11, r1
     a4c:	f6 01       	movw	r30, r12
     a4e:	60 81       	ld	r22, Z
     a50:	71 81       	ldd	r23, Z+1	; 0x01
     a52:	82 81       	ldd	r24, Z+2	; 0x02
     a54:	93 81       	ldd	r25, Z+3	; 0x03
     a56:	0a c0       	rjmp	.+20     	; 0xa6c <__stack+0x16d>
     a58:	f2 e0       	ldi	r31, 0x02	; 2
     a5a:	af 0e       	add	r10, r31
     a5c:	b1 1c       	adc	r11, r1
     a5e:	f6 01       	movw	r30, r12
     a60:	60 81       	ld	r22, Z
     a62:	71 81       	ldd	r23, Z+1	; 0x01
     a64:	07 2e       	mov	r0, r23
     a66:	00 0c       	add	r0, r0
     a68:	88 0b       	sbc	r24, r24
     a6a:	99 0b       	sbc	r25, r25
     a6c:	f9 2d       	mov	r31, r9
     a6e:	ff 76       	andi	r31, 0x6F	; 111
     a70:	9f 2e       	mov	r9, r31
     a72:	97 ff       	sbrs	r25, 7
     a74:	09 c0       	rjmp	.+18     	; 0xa88 <__stack+0x189>
     a76:	90 95       	com	r25
     a78:	80 95       	com	r24
     a7a:	70 95       	com	r23
     a7c:	61 95       	neg	r22
     a7e:	7f 4f       	sbci	r23, 0xFF	; 255
     a80:	8f 4f       	sbci	r24, 0xFF	; 255
     a82:	9f 4f       	sbci	r25, 0xFF	; 255
     a84:	f0 68       	ori	r31, 0x80	; 128
     a86:	9f 2e       	mov	r9, r31
     a88:	2a e0       	ldi	r18, 0x0A	; 10
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	a3 01       	movw	r20, r6
     a8e:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__ultoa_invert>
     a92:	c8 2e       	mov	r12, r24
     a94:	c6 18       	sub	r12, r6
     a96:	3f c0       	rjmp	.+126    	; 0xb16 <__stack+0x217>
     a98:	09 2d       	mov	r16, r9
     a9a:	85 37       	cpi	r24, 0x75	; 117
     a9c:	21 f4       	brne	.+8      	; 0xaa6 <__stack+0x1a7>
     a9e:	0f 7e       	andi	r16, 0xEF	; 239
     aa0:	2a e0       	ldi	r18, 0x0A	; 10
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	1d c0       	rjmp	.+58     	; 0xae0 <__stack+0x1e1>
     aa6:	09 7f       	andi	r16, 0xF9	; 249
     aa8:	8f 36       	cpi	r24, 0x6F	; 111
     aaa:	91 f0       	breq	.+36     	; 0xad0 <__stack+0x1d1>
     aac:	18 f4       	brcc	.+6      	; 0xab4 <__stack+0x1b5>
     aae:	88 35       	cpi	r24, 0x58	; 88
     ab0:	59 f0       	breq	.+22     	; 0xac8 <__stack+0x1c9>
     ab2:	c3 c0       	rjmp	.+390    	; 0xc3a <__stack+0x33b>
     ab4:	80 37       	cpi	r24, 0x70	; 112
     ab6:	19 f0       	breq	.+6      	; 0xabe <__stack+0x1bf>
     ab8:	88 37       	cpi	r24, 0x78	; 120
     aba:	11 f0       	breq	.+4      	; 0xac0 <__stack+0x1c1>
     abc:	be c0       	rjmp	.+380    	; 0xc3a <__stack+0x33b>
     abe:	00 61       	ori	r16, 0x10	; 16
     ac0:	04 ff       	sbrs	r16, 4
     ac2:	09 c0       	rjmp	.+18     	; 0xad6 <__stack+0x1d7>
     ac4:	04 60       	ori	r16, 0x04	; 4
     ac6:	07 c0       	rjmp	.+14     	; 0xad6 <__stack+0x1d7>
     ac8:	94 fe       	sbrs	r9, 4
     aca:	08 c0       	rjmp	.+16     	; 0xadc <__stack+0x1dd>
     acc:	06 60       	ori	r16, 0x06	; 6
     ace:	06 c0       	rjmp	.+12     	; 0xadc <__stack+0x1dd>
     ad0:	28 e0       	ldi	r18, 0x08	; 8
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	05 c0       	rjmp	.+10     	; 0xae0 <__stack+0x1e1>
     ad6:	20 e1       	ldi	r18, 0x10	; 16
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	02 c0       	rjmp	.+4      	; 0xae0 <__stack+0x1e1>
     adc:	20 e1       	ldi	r18, 0x10	; 16
     ade:	32 e0       	ldi	r19, 0x02	; 2
     ae0:	56 01       	movw	r10, r12
     ae2:	07 ff       	sbrs	r16, 7
     ae4:	09 c0       	rjmp	.+18     	; 0xaf8 <__stack+0x1f9>
     ae6:	84 e0       	ldi	r24, 0x04	; 4
     ae8:	a8 0e       	add	r10, r24
     aea:	b1 1c       	adc	r11, r1
     aec:	f6 01       	movw	r30, r12
     aee:	60 81       	ld	r22, Z
     af0:	71 81       	ldd	r23, Z+1	; 0x01
     af2:	82 81       	ldd	r24, Z+2	; 0x02
     af4:	93 81       	ldd	r25, Z+3	; 0x03
     af6:	08 c0       	rjmp	.+16     	; 0xb08 <__stack+0x209>
     af8:	f2 e0       	ldi	r31, 0x02	; 2
     afa:	af 0e       	add	r10, r31
     afc:	b1 1c       	adc	r11, r1
     afe:	f6 01       	movw	r30, r12
     b00:	60 81       	ld	r22, Z
     b02:	71 81       	ldd	r23, Z+1	; 0x01
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	a3 01       	movw	r20, r6
     b0a:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__ultoa_invert>
     b0e:	c8 2e       	mov	r12, r24
     b10:	c6 18       	sub	r12, r6
     b12:	0f 77       	andi	r16, 0x7F	; 127
     b14:	90 2e       	mov	r9, r16
     b16:	96 fe       	sbrs	r9, 6
     b18:	0b c0       	rjmp	.+22     	; 0xb30 <__stack+0x231>
     b1a:	09 2d       	mov	r16, r9
     b1c:	0e 7f       	andi	r16, 0xFE	; 254
     b1e:	c1 16       	cp	r12, r17
     b20:	50 f4       	brcc	.+20     	; 0xb36 <__stack+0x237>
     b22:	94 fe       	sbrs	r9, 4
     b24:	0a c0       	rjmp	.+20     	; 0xb3a <__stack+0x23b>
     b26:	92 fc       	sbrc	r9, 2
     b28:	08 c0       	rjmp	.+16     	; 0xb3a <__stack+0x23b>
     b2a:	09 2d       	mov	r16, r9
     b2c:	0e 7e       	andi	r16, 0xEE	; 238
     b2e:	05 c0       	rjmp	.+10     	; 0xb3a <__stack+0x23b>
     b30:	dc 2c       	mov	r13, r12
     b32:	09 2d       	mov	r16, r9
     b34:	03 c0       	rjmp	.+6      	; 0xb3c <__stack+0x23d>
     b36:	dc 2c       	mov	r13, r12
     b38:	01 c0       	rjmp	.+2      	; 0xb3c <__stack+0x23d>
     b3a:	d1 2e       	mov	r13, r17
     b3c:	04 ff       	sbrs	r16, 4
     b3e:	0d c0       	rjmp	.+26     	; 0xb5a <__stack+0x25b>
     b40:	fe 01       	movw	r30, r28
     b42:	ec 0d       	add	r30, r12
     b44:	f1 1d       	adc	r31, r1
     b46:	80 81       	ld	r24, Z
     b48:	80 33       	cpi	r24, 0x30	; 48
     b4a:	11 f4       	brne	.+4      	; 0xb50 <__stack+0x251>
     b4c:	09 7e       	andi	r16, 0xE9	; 233
     b4e:	09 c0       	rjmp	.+18     	; 0xb62 <__stack+0x263>
     b50:	02 ff       	sbrs	r16, 2
     b52:	06 c0       	rjmp	.+12     	; 0xb60 <__stack+0x261>
     b54:	d3 94       	inc	r13
     b56:	d3 94       	inc	r13
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <__stack+0x263>
     b5a:	80 2f       	mov	r24, r16
     b5c:	86 78       	andi	r24, 0x86	; 134
     b5e:	09 f0       	breq	.+2      	; 0xb62 <__stack+0x263>
     b60:	d3 94       	inc	r13
     b62:	03 fd       	sbrc	r16, 3
     b64:	11 c0       	rjmp	.+34     	; 0xb88 <__stack+0x289>
     b66:	00 ff       	sbrs	r16, 0
     b68:	06 c0       	rjmp	.+12     	; 0xb76 <__stack+0x277>
     b6a:	1c 2d       	mov	r17, r12
     b6c:	d5 14       	cp	r13, r5
     b6e:	80 f4       	brcc	.+32     	; 0xb90 <__stack+0x291>
     b70:	15 0d       	add	r17, r5
     b72:	1d 19       	sub	r17, r13
     b74:	0d c0       	rjmp	.+26     	; 0xb90 <__stack+0x291>
     b76:	d5 14       	cp	r13, r5
     b78:	58 f4       	brcc	.+22     	; 0xb90 <__stack+0x291>
     b7a:	b7 01       	movw	r22, r14
     b7c:	80 e2       	ldi	r24, 0x20	; 32
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     b84:	d3 94       	inc	r13
     b86:	f7 cf       	rjmp	.-18     	; 0xb76 <__stack+0x277>
     b88:	d5 14       	cp	r13, r5
     b8a:	10 f4       	brcc	.+4      	; 0xb90 <__stack+0x291>
     b8c:	5d 18       	sub	r5, r13
     b8e:	01 c0       	rjmp	.+2      	; 0xb92 <__stack+0x293>
     b90:	51 2c       	mov	r5, r1
     b92:	04 ff       	sbrs	r16, 4
     b94:	10 c0       	rjmp	.+32     	; 0xbb6 <__stack+0x2b7>
     b96:	b7 01       	movw	r22, r14
     b98:	80 e3       	ldi	r24, 0x30	; 48
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     ba0:	02 ff       	sbrs	r16, 2
     ba2:	17 c0       	rjmp	.+46     	; 0xbd2 <__stack+0x2d3>
     ba4:	01 fd       	sbrc	r16, 1
     ba6:	03 c0       	rjmp	.+6      	; 0xbae <__stack+0x2af>
     ba8:	88 e7       	ldi	r24, 0x78	; 120
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <__stack+0x2b3>
     bae:	88 e5       	ldi	r24, 0x58	; 88
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	b7 01       	movw	r22, r14
     bb4:	0c c0       	rjmp	.+24     	; 0xbce <__stack+0x2cf>
     bb6:	80 2f       	mov	r24, r16
     bb8:	86 78       	andi	r24, 0x86	; 134
     bba:	59 f0       	breq	.+22     	; 0xbd2 <__stack+0x2d3>
     bbc:	01 ff       	sbrs	r16, 1
     bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <__stack+0x2c5>
     bc0:	8b e2       	ldi	r24, 0x2B	; 43
     bc2:	01 c0       	rjmp	.+2      	; 0xbc6 <__stack+0x2c7>
     bc4:	80 e2       	ldi	r24, 0x20	; 32
     bc6:	07 fd       	sbrc	r16, 7
     bc8:	8d e2       	ldi	r24, 0x2D	; 45
     bca:	b7 01       	movw	r22, r14
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     bd2:	c1 16       	cp	r12, r17
     bd4:	38 f4       	brcc	.+14     	; 0xbe4 <__stack+0x2e5>
     bd6:	b7 01       	movw	r22, r14
     bd8:	80 e3       	ldi	r24, 0x30	; 48
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     be0:	11 50       	subi	r17, 0x01	; 1
     be2:	f7 cf       	rjmp	.-18     	; 0xbd2 <__stack+0x2d3>
     be4:	ca 94       	dec	r12
     be6:	f3 01       	movw	r30, r6
     be8:	ec 0d       	add	r30, r12
     bea:	f1 1d       	adc	r31, r1
     bec:	80 81       	ld	r24, Z
     bee:	b7 01       	movw	r22, r14
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     bf6:	c1 10       	cpse	r12, r1
     bf8:	f5 cf       	rjmp	.-22     	; 0xbe4 <__stack+0x2e5>
     bfa:	15 c0       	rjmp	.+42     	; 0xc26 <__stack+0x327>
     bfc:	f4 e0       	ldi	r31, 0x04	; 4
     bfe:	f5 15       	cp	r31, r5
     c00:	60 f5       	brcc	.+88     	; 0xc5a <__stack+0x35b>
     c02:	84 e0       	ldi	r24, 0x04	; 4
     c04:	58 1a       	sub	r5, r24
     c06:	93 fe       	sbrs	r9, 3
     c08:	1f c0       	rjmp	.+62     	; 0xc48 <__stack+0x349>
     c0a:	01 11       	cpse	r16, r1
     c0c:	27 c0       	rjmp	.+78     	; 0xc5c <__stack+0x35d>
     c0e:	2c 85       	ldd	r18, Y+12	; 0x0c
     c10:	23 ff       	sbrs	r18, 3
     c12:	2a c0       	rjmp	.+84     	; 0xc68 <__stack+0x369>
     c14:	08 e6       	ldi	r16, 0x68	; 104
     c16:	10 e0       	ldi	r17, 0x00	; 0
     c18:	39 2d       	mov	r19, r9
     c1a:	30 71       	andi	r19, 0x10	; 16
     c1c:	93 2e       	mov	r9, r19
     c1e:	f8 01       	movw	r30, r16
     c20:	84 91       	lpm	r24, Z
     c22:	81 11       	cpse	r24, r1
     c24:	24 c0       	rjmp	.+72     	; 0xc6e <__stack+0x36f>
     c26:	55 20       	and	r5, r5
     c28:	09 f4       	brne	.+2      	; 0xc2c <__stack+0x32d>
     c2a:	e4 cc       	rjmp	.-1592   	; 0x5f4 <vfprintf+0x58>
     c2c:	b7 01       	movw	r22, r14
     c2e:	80 e2       	ldi	r24, 0x20	; 32
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     c36:	5a 94       	dec	r5
     c38:	f6 cf       	rjmp	.-20     	; 0xc26 <__stack+0x327>
     c3a:	f7 01       	movw	r30, r14
     c3c:	86 81       	ldd	r24, Z+6	; 0x06
     c3e:	97 81       	ldd	r25, Z+7	; 0x07
     c40:	26 c0       	rjmp	.+76     	; 0xc8e <__stack+0x38f>
     c42:	8f ef       	ldi	r24, 0xFF	; 255
     c44:	9f ef       	ldi	r25, 0xFF	; 255
     c46:	23 c0       	rjmp	.+70     	; 0xc8e <__stack+0x38f>
     c48:	b7 01       	movw	r22, r14
     c4a:	80 e2       	ldi	r24, 0x20	; 32
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     c52:	5a 94       	dec	r5
     c54:	51 10       	cpse	r5, r1
     c56:	f8 cf       	rjmp	.-16     	; 0xc48 <__stack+0x349>
     c58:	d8 cf       	rjmp	.-80     	; 0xc0a <__stack+0x30b>
     c5a:	51 2c       	mov	r5, r1
     c5c:	b7 01       	movw	r22, r14
     c5e:	80 2f       	mov	r24, r16
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     c66:	d3 cf       	rjmp	.-90     	; 0xc0e <__stack+0x30f>
     c68:	0c e6       	ldi	r16, 0x6C	; 108
     c6a:	10 e0       	ldi	r17, 0x00	; 0
     c6c:	d5 cf       	rjmp	.-86     	; 0xc18 <__stack+0x319>
     c6e:	91 10       	cpse	r9, r1
     c70:	80 52       	subi	r24, 0x20	; 32
     c72:	b7 01       	movw	r22, r14
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 70 07 	call	0xee0	; 0xee0 <fputc>
     c7a:	0f 5f       	subi	r16, 0xFF	; 255
     c7c:	1f 4f       	sbci	r17, 0xFF	; 255
     c7e:	cf cf       	rjmp	.-98     	; 0xc1e <__stack+0x31f>
     c80:	23 e0       	ldi	r18, 0x03	; 3
     c82:	25 15       	cp	r18, r5
     c84:	10 f4       	brcc	.+4      	; 0xc8a <__stack+0x38b>
     c86:	83 e0       	ldi	r24, 0x03	; 3
     c88:	bd cf       	rjmp	.-134    	; 0xc04 <__stack+0x305>
     c8a:	51 2c       	mov	r5, r1
     c8c:	c0 cf       	rjmp	.-128    	; 0xc0e <__stack+0x30f>
     c8e:	60 96       	adiw	r28, 0x10	; 16
     c90:	e2 e1       	ldi	r30, 0x12	; 18
     c92:	0c 94 67 06 	jmp	0xcce	; 0xcce <__epilogue_restores__>

00000c96 <__prologue_saves__>:
     c96:	2f 92       	push	r2
     c98:	3f 92       	push	r3
     c9a:	4f 92       	push	r4
     c9c:	5f 92       	push	r5
     c9e:	6f 92       	push	r6
     ca0:	7f 92       	push	r7
     ca2:	8f 92       	push	r8
     ca4:	9f 92       	push	r9
     ca6:	af 92       	push	r10
     ca8:	bf 92       	push	r11
     caa:	cf 92       	push	r12
     cac:	df 92       	push	r13
     cae:	ef 92       	push	r14
     cb0:	ff 92       	push	r15
     cb2:	0f 93       	push	r16
     cb4:	1f 93       	push	r17
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	ca 1b       	sub	r28, r26
     cc0:	db 0b       	sbc	r29, r27
     cc2:	0f b6       	in	r0, 0x3f	; 63
     cc4:	f8 94       	cli
     cc6:	de bf       	out	0x3e, r29	; 62
     cc8:	0f be       	out	0x3f, r0	; 63
     cca:	cd bf       	out	0x3d, r28	; 61
     ccc:	09 94       	ijmp

00000cce <__epilogue_restores__>:
     cce:	2a 88       	ldd	r2, Y+18	; 0x12
     cd0:	39 88       	ldd	r3, Y+17	; 0x11
     cd2:	48 88       	ldd	r4, Y+16	; 0x10
     cd4:	5f 84       	ldd	r5, Y+15	; 0x0f
     cd6:	6e 84       	ldd	r6, Y+14	; 0x0e
     cd8:	7d 84       	ldd	r7, Y+13	; 0x0d
     cda:	8c 84       	ldd	r8, Y+12	; 0x0c
     cdc:	9b 84       	ldd	r9, Y+11	; 0x0b
     cde:	aa 84       	ldd	r10, Y+10	; 0x0a
     ce0:	b9 84       	ldd	r11, Y+9	; 0x09
     ce2:	c8 84       	ldd	r12, Y+8	; 0x08
     ce4:	df 80       	ldd	r13, Y+7	; 0x07
     ce6:	ee 80       	ldd	r14, Y+6	; 0x06
     ce8:	fd 80       	ldd	r15, Y+5	; 0x05
     cea:	0c 81       	ldd	r16, Y+4	; 0x04
     cec:	1b 81       	ldd	r17, Y+3	; 0x03
     cee:	aa 81       	ldd	r26, Y+2	; 0x02
     cf0:	b9 81       	ldd	r27, Y+1	; 0x01
     cf2:	ce 0f       	add	r28, r30
     cf4:	d1 1d       	adc	r29, r1
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	f8 94       	cli
     cfa:	de bf       	out	0x3e, r29	; 62
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	cd bf       	out	0x3d, r28	; 61
     d00:	ed 01       	movw	r28, r26
     d02:	08 95       	ret

00000d04 <__ftoa_engine>:
     d04:	28 30       	cpi	r18, 0x08	; 8
     d06:	08 f0       	brcs	.+2      	; 0xd0a <__ftoa_engine+0x6>
     d08:	27 e0       	ldi	r18, 0x07	; 7
     d0a:	33 27       	eor	r19, r19
     d0c:	da 01       	movw	r26, r20
     d0e:	99 0f       	add	r25, r25
     d10:	31 1d       	adc	r19, r1
     d12:	87 fd       	sbrc	r24, 7
     d14:	91 60       	ori	r25, 0x01	; 1
     d16:	00 96       	adiw	r24, 0x00	; 0
     d18:	61 05       	cpc	r22, r1
     d1a:	71 05       	cpc	r23, r1
     d1c:	39 f4       	brne	.+14     	; 0xd2c <__ftoa_engine+0x28>
     d1e:	32 60       	ori	r19, 0x02	; 2
     d20:	2e 5f       	subi	r18, 0xFE	; 254
     d22:	3d 93       	st	X+, r19
     d24:	30 e3       	ldi	r19, 0x30	; 48
     d26:	2a 95       	dec	r18
     d28:	e1 f7       	brne	.-8      	; 0xd22 <__ftoa_engine+0x1e>
     d2a:	08 95       	ret
     d2c:	9f 3f       	cpi	r25, 0xFF	; 255
     d2e:	30 f0       	brcs	.+12     	; 0xd3c <__ftoa_engine+0x38>
     d30:	80 38       	cpi	r24, 0x80	; 128
     d32:	71 05       	cpc	r23, r1
     d34:	61 05       	cpc	r22, r1
     d36:	09 f0       	breq	.+2      	; 0xd3a <__ftoa_engine+0x36>
     d38:	3c 5f       	subi	r19, 0xFC	; 252
     d3a:	3c 5f       	subi	r19, 0xFC	; 252
     d3c:	3d 93       	st	X+, r19
     d3e:	91 30       	cpi	r25, 0x01	; 1
     d40:	08 f0       	brcs	.+2      	; 0xd44 <__ftoa_engine+0x40>
     d42:	80 68       	ori	r24, 0x80	; 128
     d44:	91 1d       	adc	r25, r1
     d46:	df 93       	push	r29
     d48:	cf 93       	push	r28
     d4a:	1f 93       	push	r17
     d4c:	0f 93       	push	r16
     d4e:	ff 92       	push	r15
     d50:	ef 92       	push	r14
     d52:	19 2f       	mov	r17, r25
     d54:	98 7f       	andi	r25, 0xF8	; 248
     d56:	96 95       	lsr	r25
     d58:	e9 2f       	mov	r30, r25
     d5a:	96 95       	lsr	r25
     d5c:	96 95       	lsr	r25
     d5e:	e9 0f       	add	r30, r25
     d60:	ff 27       	eor	r31, r31
     d62:	e6 53       	subi	r30, 0x36	; 54
     d64:	ff 4f       	sbci	r31, 0xFF	; 255
     d66:	99 27       	eor	r25, r25
     d68:	33 27       	eor	r19, r19
     d6a:	ee 24       	eor	r14, r14
     d6c:	ff 24       	eor	r15, r15
     d6e:	a7 01       	movw	r20, r14
     d70:	e7 01       	movw	r28, r14
     d72:	05 90       	lpm	r0, Z+
     d74:	08 94       	sec
     d76:	07 94       	ror	r0
     d78:	28 f4       	brcc	.+10     	; 0xd84 <__ftoa_engine+0x80>
     d7a:	36 0f       	add	r19, r22
     d7c:	e7 1e       	adc	r14, r23
     d7e:	f8 1e       	adc	r15, r24
     d80:	49 1f       	adc	r20, r25
     d82:	51 1d       	adc	r21, r1
     d84:	66 0f       	add	r22, r22
     d86:	77 1f       	adc	r23, r23
     d88:	88 1f       	adc	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	06 94       	lsr	r0
     d8e:	a1 f7       	brne	.-24     	; 0xd78 <__ftoa_engine+0x74>
     d90:	05 90       	lpm	r0, Z+
     d92:	07 94       	ror	r0
     d94:	28 f4       	brcc	.+10     	; 0xda0 <__ftoa_engine+0x9c>
     d96:	e7 0e       	add	r14, r23
     d98:	f8 1e       	adc	r15, r24
     d9a:	49 1f       	adc	r20, r25
     d9c:	56 1f       	adc	r21, r22
     d9e:	c1 1d       	adc	r28, r1
     da0:	77 0f       	add	r23, r23
     da2:	88 1f       	adc	r24, r24
     da4:	99 1f       	adc	r25, r25
     da6:	66 1f       	adc	r22, r22
     da8:	06 94       	lsr	r0
     daa:	a1 f7       	brne	.-24     	; 0xd94 <__ftoa_engine+0x90>
     dac:	05 90       	lpm	r0, Z+
     dae:	07 94       	ror	r0
     db0:	28 f4       	brcc	.+10     	; 0xdbc <__ftoa_engine+0xb8>
     db2:	f8 0e       	add	r15, r24
     db4:	49 1f       	adc	r20, r25
     db6:	56 1f       	adc	r21, r22
     db8:	c7 1f       	adc	r28, r23
     dba:	d1 1d       	adc	r29, r1
     dbc:	88 0f       	add	r24, r24
     dbe:	99 1f       	adc	r25, r25
     dc0:	66 1f       	adc	r22, r22
     dc2:	77 1f       	adc	r23, r23
     dc4:	06 94       	lsr	r0
     dc6:	a1 f7       	brne	.-24     	; 0xdb0 <__ftoa_engine+0xac>
     dc8:	05 90       	lpm	r0, Z+
     dca:	07 94       	ror	r0
     dcc:	20 f4       	brcc	.+8      	; 0xdd6 <__ftoa_engine+0xd2>
     dce:	49 0f       	add	r20, r25
     dd0:	56 1f       	adc	r21, r22
     dd2:	c7 1f       	adc	r28, r23
     dd4:	d8 1f       	adc	r29, r24
     dd6:	99 0f       	add	r25, r25
     dd8:	66 1f       	adc	r22, r22
     dda:	77 1f       	adc	r23, r23
     ddc:	88 1f       	adc	r24, r24
     dde:	06 94       	lsr	r0
     de0:	a9 f7       	brne	.-22     	; 0xdcc <__ftoa_engine+0xc8>
     de2:	84 91       	lpm	r24, Z
     de4:	10 95       	com	r17
     de6:	17 70       	andi	r17, 0x07	; 7
     de8:	41 f0       	breq	.+16     	; 0xdfa <__ftoa_engine+0xf6>
     dea:	d6 95       	lsr	r29
     dec:	c7 95       	ror	r28
     dee:	57 95       	ror	r21
     df0:	47 95       	ror	r20
     df2:	f7 94       	ror	r15
     df4:	e7 94       	ror	r14
     df6:	1a 95       	dec	r17
     df8:	c1 f7       	brne	.-16     	; 0xdea <__ftoa_engine+0xe6>
     dfa:	e0 e7       	ldi	r30, 0x70	; 112
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	68 94       	set
     e00:	15 90       	lpm	r1, Z+
     e02:	15 91       	lpm	r17, Z+
     e04:	35 91       	lpm	r19, Z+
     e06:	65 91       	lpm	r22, Z+
     e08:	95 91       	lpm	r25, Z+
     e0a:	05 90       	lpm	r0, Z+
     e0c:	7f e2       	ldi	r23, 0x2F	; 47
     e0e:	73 95       	inc	r23
     e10:	e1 18       	sub	r14, r1
     e12:	f1 0a       	sbc	r15, r17
     e14:	43 0b       	sbc	r20, r19
     e16:	56 0b       	sbc	r21, r22
     e18:	c9 0b       	sbc	r28, r25
     e1a:	d0 09       	sbc	r29, r0
     e1c:	c0 f7       	brcc	.-16     	; 0xe0e <__ftoa_engine+0x10a>
     e1e:	e1 0c       	add	r14, r1
     e20:	f1 1e       	adc	r15, r17
     e22:	43 1f       	adc	r20, r19
     e24:	56 1f       	adc	r21, r22
     e26:	c9 1f       	adc	r28, r25
     e28:	d0 1d       	adc	r29, r0
     e2a:	7e f4       	brtc	.+30     	; 0xe4a <__ftoa_engine+0x146>
     e2c:	70 33       	cpi	r23, 0x30	; 48
     e2e:	11 f4       	brne	.+4      	; 0xe34 <__ftoa_engine+0x130>
     e30:	8a 95       	dec	r24
     e32:	e6 cf       	rjmp	.-52     	; 0xe00 <__ftoa_engine+0xfc>
     e34:	e8 94       	clt
     e36:	01 50       	subi	r16, 0x01	; 1
     e38:	30 f0       	brcs	.+12     	; 0xe46 <__ftoa_engine+0x142>
     e3a:	08 0f       	add	r16, r24
     e3c:	0a f4       	brpl	.+2      	; 0xe40 <__ftoa_engine+0x13c>
     e3e:	00 27       	eor	r16, r16
     e40:	02 17       	cp	r16, r18
     e42:	08 f4       	brcc	.+2      	; 0xe46 <__ftoa_engine+0x142>
     e44:	20 2f       	mov	r18, r16
     e46:	23 95       	inc	r18
     e48:	02 2f       	mov	r16, r18
     e4a:	7a 33       	cpi	r23, 0x3A	; 58
     e4c:	28 f0       	brcs	.+10     	; 0xe58 <__ftoa_engine+0x154>
     e4e:	79 e3       	ldi	r23, 0x39	; 57
     e50:	7d 93       	st	X+, r23
     e52:	2a 95       	dec	r18
     e54:	e9 f7       	brne	.-6      	; 0xe50 <__ftoa_engine+0x14c>
     e56:	10 c0       	rjmp	.+32     	; 0xe78 <__ftoa_engine+0x174>
     e58:	7d 93       	st	X+, r23
     e5a:	2a 95       	dec	r18
     e5c:	89 f6       	brne	.-94     	; 0xe00 <__ftoa_engine+0xfc>
     e5e:	06 94       	lsr	r0
     e60:	97 95       	ror	r25
     e62:	67 95       	ror	r22
     e64:	37 95       	ror	r19
     e66:	17 95       	ror	r17
     e68:	17 94       	ror	r1
     e6a:	e1 18       	sub	r14, r1
     e6c:	f1 0a       	sbc	r15, r17
     e6e:	43 0b       	sbc	r20, r19
     e70:	56 0b       	sbc	r21, r22
     e72:	c9 0b       	sbc	r28, r25
     e74:	d0 09       	sbc	r29, r0
     e76:	98 f0       	brcs	.+38     	; 0xe9e <__ftoa_engine+0x19a>
     e78:	23 95       	inc	r18
     e7a:	7e 91       	ld	r23, -X
     e7c:	73 95       	inc	r23
     e7e:	7a 33       	cpi	r23, 0x3A	; 58
     e80:	08 f0       	brcs	.+2      	; 0xe84 <__ftoa_engine+0x180>
     e82:	70 e3       	ldi	r23, 0x30	; 48
     e84:	7c 93       	st	X, r23
     e86:	20 13       	cpse	r18, r16
     e88:	b8 f7       	brcc	.-18     	; 0xe78 <__ftoa_engine+0x174>
     e8a:	7e 91       	ld	r23, -X
     e8c:	70 61       	ori	r23, 0x10	; 16
     e8e:	7d 93       	st	X+, r23
     e90:	30 f0       	brcs	.+12     	; 0xe9e <__ftoa_engine+0x19a>
     e92:	83 95       	inc	r24
     e94:	71 e3       	ldi	r23, 0x31	; 49
     e96:	7d 93       	st	X+, r23
     e98:	70 e3       	ldi	r23, 0x30	; 48
     e9a:	2a 95       	dec	r18
     e9c:	e1 f7       	brne	.-8      	; 0xe96 <__ftoa_engine+0x192>
     e9e:	11 24       	eor	r1, r1
     ea0:	ef 90       	pop	r14
     ea2:	ff 90       	pop	r15
     ea4:	0f 91       	pop	r16
     ea6:	1f 91       	pop	r17
     ea8:	cf 91       	pop	r28
     eaa:	df 91       	pop	r29
     eac:	99 27       	eor	r25, r25
     eae:	87 fd       	sbrc	r24, 7
     eb0:	90 95       	com	r25
     eb2:	08 95       	ret

00000eb4 <strnlen_P>:
     eb4:	fc 01       	movw	r30, r24
     eb6:	05 90       	lpm	r0, Z+
     eb8:	61 50       	subi	r22, 0x01	; 1
     eba:	70 40       	sbci	r23, 0x00	; 0
     ebc:	01 10       	cpse	r0, r1
     ebe:	d8 f7       	brcc	.-10     	; 0xeb6 <strnlen_P+0x2>
     ec0:	80 95       	com	r24
     ec2:	90 95       	com	r25
     ec4:	8e 0f       	add	r24, r30
     ec6:	9f 1f       	adc	r25, r31
     ec8:	08 95       	ret

00000eca <strnlen>:
     eca:	fc 01       	movw	r30, r24
     ecc:	61 50       	subi	r22, 0x01	; 1
     ece:	70 40       	sbci	r23, 0x00	; 0
     ed0:	01 90       	ld	r0, Z+
     ed2:	01 10       	cpse	r0, r1
     ed4:	d8 f7       	brcc	.-10     	; 0xecc <strnlen+0x2>
     ed6:	80 95       	com	r24
     ed8:	90 95       	com	r25
     eda:	8e 0f       	add	r24, r30
     edc:	9f 1f       	adc	r25, r31
     ede:	08 95       	ret

00000ee0 <fputc>:
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	fb 01       	movw	r30, r22
     eea:	23 81       	ldd	r18, Z+3	; 0x03
     eec:	21 fd       	sbrc	r18, 1
     eee:	03 c0       	rjmp	.+6      	; 0xef6 <fputc+0x16>
     ef0:	8f ef       	ldi	r24, 0xFF	; 255
     ef2:	9f ef       	ldi	r25, 0xFF	; 255
     ef4:	2c c0       	rjmp	.+88     	; 0xf4e <fputc+0x6e>
     ef6:	22 ff       	sbrs	r18, 2
     ef8:	16 c0       	rjmp	.+44     	; 0xf26 <fputc+0x46>
     efa:	46 81       	ldd	r20, Z+6	; 0x06
     efc:	57 81       	ldd	r21, Z+7	; 0x07
     efe:	24 81       	ldd	r18, Z+4	; 0x04
     f00:	35 81       	ldd	r19, Z+5	; 0x05
     f02:	42 17       	cp	r20, r18
     f04:	53 07       	cpc	r21, r19
     f06:	44 f4       	brge	.+16     	; 0xf18 <fputc+0x38>
     f08:	a0 81       	ld	r26, Z
     f0a:	b1 81       	ldd	r27, Z+1	; 0x01
     f0c:	9d 01       	movw	r18, r26
     f0e:	2f 5f       	subi	r18, 0xFF	; 255
     f10:	3f 4f       	sbci	r19, 0xFF	; 255
     f12:	31 83       	std	Z+1, r19	; 0x01
     f14:	20 83       	st	Z, r18
     f16:	8c 93       	st	X, r24
     f18:	26 81       	ldd	r18, Z+6	; 0x06
     f1a:	37 81       	ldd	r19, Z+7	; 0x07
     f1c:	2f 5f       	subi	r18, 0xFF	; 255
     f1e:	3f 4f       	sbci	r19, 0xFF	; 255
     f20:	37 83       	std	Z+7, r19	; 0x07
     f22:	26 83       	std	Z+6, r18	; 0x06
     f24:	14 c0       	rjmp	.+40     	; 0xf4e <fputc+0x6e>
     f26:	8b 01       	movw	r16, r22
     f28:	ec 01       	movw	r28, r24
     f2a:	fb 01       	movw	r30, r22
     f2c:	00 84       	ldd	r0, Z+8	; 0x08
     f2e:	f1 85       	ldd	r31, Z+9	; 0x09
     f30:	e0 2d       	mov	r30, r0
     f32:	09 95       	icall
     f34:	89 2b       	or	r24, r25
     f36:	e1 f6       	brne	.-72     	; 0xef0 <fputc+0x10>
     f38:	d8 01       	movw	r26, r16
     f3a:	16 96       	adiw	r26, 0x06	; 6
     f3c:	8d 91       	ld	r24, X+
     f3e:	9c 91       	ld	r25, X
     f40:	17 97       	sbiw	r26, 0x07	; 7
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	17 96       	adiw	r26, 0x07	; 7
     f46:	9c 93       	st	X, r25
     f48:	8e 93       	st	-X, r24
     f4a:	16 97       	sbiw	r26, 0x06	; 6
     f4c:	ce 01       	movw	r24, r28
     f4e:	df 91       	pop	r29
     f50:	cf 91       	pop	r28
     f52:	1f 91       	pop	r17
     f54:	0f 91       	pop	r16
     f56:	08 95       	ret

00000f58 <sprintf>:
     f58:	ae e0       	ldi	r26, 0x0E	; 14
     f5a:	b0 e0       	ldi	r27, 0x00	; 0
     f5c:	e2 eb       	ldi	r30, 0xB2	; 178
     f5e:	f7 e0       	ldi	r31, 0x07	; 7
     f60:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__prologue_saves__+0x1c>
     f64:	0d 89       	ldd	r16, Y+21	; 0x15
     f66:	1e 89       	ldd	r17, Y+22	; 0x16
     f68:	86 e0       	ldi	r24, 0x06	; 6
     f6a:	8c 83       	std	Y+4, r24	; 0x04
     f6c:	1a 83       	std	Y+2, r17	; 0x02
     f6e:	09 83       	std	Y+1, r16	; 0x01
     f70:	8f ef       	ldi	r24, 0xFF	; 255
     f72:	9f e7       	ldi	r25, 0x7F	; 127
     f74:	9e 83       	std	Y+6, r25	; 0x06
     f76:	8d 83       	std	Y+5, r24	; 0x05
     f78:	ae 01       	movw	r20, r28
     f7a:	47 5e       	subi	r20, 0xE7	; 231
     f7c:	5f 4f       	sbci	r21, 0xFF	; 255
     f7e:	6f 89       	ldd	r22, Y+23	; 0x17
     f80:	78 8d       	ldd	r23, Y+24	; 0x18
     f82:	ce 01       	movw	r24, r28
     f84:	01 96       	adiw	r24, 0x01	; 1
     f86:	0e 94 ce 02 	call	0x59c	; 0x59c <vfprintf>
     f8a:	ef 81       	ldd	r30, Y+7	; 0x07
     f8c:	f8 85       	ldd	r31, Y+8	; 0x08
     f8e:	e0 0f       	add	r30, r16
     f90:	f1 1f       	adc	r31, r17
     f92:	10 82       	st	Z, r1
     f94:	2e 96       	adiw	r28, 0x0e	; 14
     f96:	e4 e0       	ldi	r30, 0x04	; 4
     f98:	0c 94 75 06 	jmp	0xcea	; 0xcea <__epilogue_restores__+0x1c>

00000f9c <__ultoa_invert>:
     f9c:	fa 01       	movw	r30, r20
     f9e:	aa 27       	eor	r26, r26
     fa0:	28 30       	cpi	r18, 0x08	; 8
     fa2:	51 f1       	breq	.+84     	; 0xff8 <__ultoa_invert+0x5c>
     fa4:	20 31       	cpi	r18, 0x10	; 16
     fa6:	81 f1       	breq	.+96     	; 0x1008 <__ultoa_invert+0x6c>
     fa8:	e8 94       	clt
     faa:	6f 93       	push	r22
     fac:	6e 7f       	andi	r22, 0xFE	; 254
     fae:	6e 5f       	subi	r22, 0xFE	; 254
     fb0:	7f 4f       	sbci	r23, 0xFF	; 255
     fb2:	8f 4f       	sbci	r24, 0xFF	; 255
     fb4:	9f 4f       	sbci	r25, 0xFF	; 255
     fb6:	af 4f       	sbci	r26, 0xFF	; 255
     fb8:	b1 e0       	ldi	r27, 0x01	; 1
     fba:	3e d0       	rcall	.+124    	; 0x1038 <__ultoa_invert+0x9c>
     fbc:	b4 e0       	ldi	r27, 0x04	; 4
     fbe:	3c d0       	rcall	.+120    	; 0x1038 <__ultoa_invert+0x9c>
     fc0:	67 0f       	add	r22, r23
     fc2:	78 1f       	adc	r23, r24
     fc4:	89 1f       	adc	r24, r25
     fc6:	9a 1f       	adc	r25, r26
     fc8:	a1 1d       	adc	r26, r1
     fca:	68 0f       	add	r22, r24
     fcc:	79 1f       	adc	r23, r25
     fce:	8a 1f       	adc	r24, r26
     fd0:	91 1d       	adc	r25, r1
     fd2:	a1 1d       	adc	r26, r1
     fd4:	6a 0f       	add	r22, r26
     fd6:	71 1d       	adc	r23, r1
     fd8:	81 1d       	adc	r24, r1
     fda:	91 1d       	adc	r25, r1
     fdc:	a1 1d       	adc	r26, r1
     fde:	20 d0       	rcall	.+64     	; 0x1020 <__ultoa_invert+0x84>
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <__ultoa_invert+0x48>
     fe2:	68 94       	set
     fe4:	3f 91       	pop	r19
     fe6:	2a e0       	ldi	r18, 0x0A	; 10
     fe8:	26 9f       	mul	r18, r22
     fea:	11 24       	eor	r1, r1
     fec:	30 19       	sub	r19, r0
     fee:	30 5d       	subi	r19, 0xD0	; 208
     ff0:	31 93       	st	Z+, r19
     ff2:	de f6       	brtc	.-74     	; 0xfaa <__ultoa_invert+0xe>
     ff4:	cf 01       	movw	r24, r30
     ff6:	08 95       	ret
     ff8:	46 2f       	mov	r20, r22
     ffa:	47 70       	andi	r20, 0x07	; 7
     ffc:	40 5d       	subi	r20, 0xD0	; 208
     ffe:	41 93       	st	Z+, r20
    1000:	b3 e0       	ldi	r27, 0x03	; 3
    1002:	0f d0       	rcall	.+30     	; 0x1022 <__ultoa_invert+0x86>
    1004:	c9 f7       	brne	.-14     	; 0xff8 <__ultoa_invert+0x5c>
    1006:	f6 cf       	rjmp	.-20     	; 0xff4 <__ultoa_invert+0x58>
    1008:	46 2f       	mov	r20, r22
    100a:	4f 70       	andi	r20, 0x0F	; 15
    100c:	40 5d       	subi	r20, 0xD0	; 208
    100e:	4a 33       	cpi	r20, 0x3A	; 58
    1010:	18 f0       	brcs	.+6      	; 0x1018 <__ultoa_invert+0x7c>
    1012:	49 5d       	subi	r20, 0xD9	; 217
    1014:	31 fd       	sbrc	r19, 1
    1016:	40 52       	subi	r20, 0x20	; 32
    1018:	41 93       	st	Z+, r20
    101a:	02 d0       	rcall	.+4      	; 0x1020 <__ultoa_invert+0x84>
    101c:	a9 f7       	brne	.-22     	; 0x1008 <__ultoa_invert+0x6c>
    101e:	ea cf       	rjmp	.-44     	; 0xff4 <__ultoa_invert+0x58>
    1020:	b4 e0       	ldi	r27, 0x04	; 4
    1022:	a6 95       	lsr	r26
    1024:	97 95       	ror	r25
    1026:	87 95       	ror	r24
    1028:	77 95       	ror	r23
    102a:	67 95       	ror	r22
    102c:	ba 95       	dec	r27
    102e:	c9 f7       	brne	.-14     	; 0x1022 <__ultoa_invert+0x86>
    1030:	00 97       	sbiw	r24, 0x00	; 0
    1032:	61 05       	cpc	r22, r1
    1034:	71 05       	cpc	r23, r1
    1036:	08 95       	ret
    1038:	9b 01       	movw	r18, r22
    103a:	ac 01       	movw	r20, r24
    103c:	0a 2e       	mov	r0, r26
    103e:	06 94       	lsr	r0
    1040:	57 95       	ror	r21
    1042:	47 95       	ror	r20
    1044:	37 95       	ror	r19
    1046:	27 95       	ror	r18
    1048:	ba 95       	dec	r27
    104a:	c9 f7       	brne	.-14     	; 0x103e <__ultoa_invert+0xa2>
    104c:	62 0f       	add	r22, r18
    104e:	73 1f       	adc	r23, r19
    1050:	84 1f       	adc	r24, r20
    1052:	95 1f       	adc	r25, r21
    1054:	a0 1d       	adc	r26, r0
    1056:	08 95       	ret

00001058 <_exit>:
    1058:	f8 94       	cli

0000105a <__stop_program>:
    105a:	ff cf       	rjmp	.-2      	; 0x105a <__stop_program>
